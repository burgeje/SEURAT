package SEURAT.search.statusOverrides;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;

import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.OperationCanceledException;
import org.eclipse.core.runtime.Status;
import org.eclipse.search.ui.ISearchQuery;
import org.eclipse.search.ui.ISearchResult;

import edu.wpi.cs.jburge.SEURAT.inference.RequirementInferences;
import edu.wpi.cs.jburge.SEURAT.rationaleData.ArgType;
import edu.wpi.cs.jburge.SEURAT.rationaleData.Argument;
import edu.wpi.cs.jburge.SEURAT.rationaleData.RationaleDB;
import edu.wpi.cs.jburge.SEURAT.rationaleData.RationaleDBUtil;
import edu.wpi.cs.jburge.SEURAT.rationaleData.ReqStatus;
import edu.wpi.cs.jburge.SEURAT.rationaleData.*;


/**
 * Implementation of the Eclipse Search Query Interface
 * For SEURAT Status Override Search
 * 
 * @author hannasm
 */
public class StatusOverrideSearchQuery implements ISearchQuery {

	/**
	 * The set of results which will be generated by the search.
	 */
	private StatusOverrideSearchResultSet m_SearchResult;
	/**
	 * A Counter for the number of search results found
	 */
	private int m_Results = 0;
	
	/**
	 * Constructing a Status Override Search Query
	 */
	public StatusOverrideSearchQuery() {
		m_SearchResult = new StatusOverrideSearchResultSet(this);
	}
	
	/* (non-Javadoc)
	 * @see org.eclipse.search.ui.ISearchQuery#canRerun()
	 */
	public boolean canRerun() {
		return true;
	}

	/* (non-Javadoc)
	 * @see org.eclipse.search.ui.ISearchQuery#canRunInBackground()
	 */
	public boolean canRunInBackground() {
		return true;
	}

	public String getLabel() {
		return "SEURAT Status Override Search (" + m_Results + " results)";
	}

	/* (non-Javadoc)
	 * @see org.eclipse.search.ui.ISearchQuery#getSearchResult()
	 */
	public ISearchResult getSearchResult() {
		return m_SearchResult;
	}

	/* Retrieve the list of status overrides from the database
	 * and add them to our search result set.
	 * 
	 * (non-Javadoc)
	 * @see org.eclipse.search.ui.ISearchQuery#run(org.eclipse.core.runtime.IProgressMonitor)
	 */
	public IStatus run(IProgressMonitor pProgress) throws OperationCanceledException {		
		RationaleDB l_db = RationaleDB.getHandle();

		m_Results = 0;
		
		// load the status overrides from the db
		Vector overridenStatus = l_db.getOverrides();
		
		// Technically we've already done the heaving lifting
		pProgress.beginTask(
				"Searching For Overridden Rationale Status",
				overridenStatus.size()
		);
		
		// TODO EMBED DB QUERY RETRIEVING STATUS OVERRIDES HERE?
	
		for( Object l_genericStatus : overridenStatus ) 
		{
			RationaleStatus l_status = (RationaleStatus)l_genericStatus;
			
			m_SearchResult.addMatch(new StatusOverrideSearchResultMatch(l_status));
			
			m_Results++;
			
			pProgress.worked(1);
		}
		
		// Finished
		pProgress.done();
        return Status.OK_STATUS;
	}
}
